"use strict";let utils=require("utils"),Chart=require("Chart"),waveFunction=require("wave-function.js"),config={type:"line",data:{datasets:[{borderColor:"#4d4d4d"},{borderColor:"#5da5da"},{borderColor:"#faa43a"},{borderColor:"#60bd68"},{borderColor:"#f17cb0"},{borderColor:"#b2912f"},{borderColor:"#b276b2"},{borderColor:"#decf3f"},{borderColor:"#f15854"},{borderColor:"#aaaaaa"},{borderColor:"#95b4ff"}]},options:{responsive:!1,legend:{display:!1},scales:{xAxes:[{type:"linear",position:"bottom",gridLines:{tickMarkLength:5},ticks:{display:!1}}],yAxes:[{gridLines:{tickMarkLength:5},ticks:{display:!1}}]},tooltips:{enabled:!1},elements:{line:{fill:!1},point:{radius:0,hoverRadius:0}}}};const m=utils.AMU,a0=utils.BOHR_RADIUS,w=9.140778e13;for(let[a,b]of config.data.datasets.entries()){let c=b.data=[];for(let d=-3;3>=d;d+=0.1)c.push({x:d,y:waveFunction(d*a0,a,m,w)});b.showLine=4>a}let chart={create(a,b){if(this.chart)return this.chart;if(b&&Array.isArray(b.visibleSeries))for(let[c,d]of config.data.datasets.entries())d.showLine=b.visibleSeries.includes(c);return Object.defineProperty(this,"chart",{enumerable:!0,value:new Chart(a,config)}),this.chart},toggleSeries(a){let b=this.chart.data.datasets[a];if(!b)throw new Error(`Series #${a} doesn't exist`);b.showLine=!b.showLine,this.chart.update()},isSeriesVisible(a){let b=this.chart.data.datasets[a];if(!b)throw new Error(`Series #${a} doesn't exist`);return b.showLine}};module.exports=chart;