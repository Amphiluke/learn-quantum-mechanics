"use strict";let a=require("utils"),b=require("Chart"),c=require("wave-function.js"),d={type:"line",data:{datasets:[{borderColor:"#4d4d4d"},{borderColor:"#5da5da"},{borderColor:"#faa43a"},{borderColor:"#60bd68"},{borderColor:"#f17cb0"},{borderColor:"#b2912f"},{borderColor:"#b276b2"},{borderColor:"#decf3f"},{borderColor:"#f15854"},{borderColor:"#aaaaaa"},{borderColor:"#95b4ff"}]},options:{responsive:!1,legend:{display:!1},scales:{xAxes:[{type:"linear",position:"bottom",gridLines:{tickMarkLength:5},ticks:{display:!1}}],yAxes:[{gridLines:{tickMarkLength:5},ticks:{display:!1}}]},tooltips:{enabled:!1},elements:{line:{fill:!1},point:{radius:0,hoverRadius:0}}}};const e=a.AMU,f=a.BOHR_RADIUS,g=9.140778e13;for(let[j,k]of d.data.datasets.entries()){let l=k.data=[];for(let o=-3;3>=o;o+=0.1)l.push({x:o,y:c(o*f,j,e,g)});k.showLine=4>j}let h={create(j,k){return this.chart?this.chart:(k&&Array.isArray(k.visibleSeries)&&d.data.datasets.forEach((l,o)=>{l.showLine=k.visibleSeries.includes(o)}),Object.defineProperty(this,"chart",{enumerable:!0,value:new b(j,d)}),this.chart)},get visibleSeries(){return this.chart.data.datasets.map((j,k)=>j.showLine?k:-1).filter((j)=>-1<j)},set visibleSeries(j){this.chart.data.datasets.forEach((k,l)=>{k.showLine=j.includes(l)}),this.chart.update()},toggleSeries(j){let k=this.chart.data.datasets[j];if(!k)throw new Error(`Series #${j} doesn't exist`);k.showLine=!k.showLine,this.chart.update()}};module.exports=h;